name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: myapp
  IMAGE_TAG: latest

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    name: Build, Lint, Test, and Scan

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # - name: Run Linter
      #   run: npm run lint

      - name: Run Unit Tests
        run: npm test

      - name: Snyk Scan - Dependencies
        uses: snyk/actions/node@master
        with:
          command: test
          args: --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-build-and-push:
    runs-on: ubuntu-latest
    name: Build Docker and Push
    needs: build-and-scan

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Snyk Scan - Prod Dependencies Only (High+)
        uses: snyk/actions/node@master
        with:
          command: test
          args: --severity-threshold=high --dev=false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # ---- Option A: DockerHub Push ----
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: DockerHub Push Image
        run: |
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

      # ---- Option B: AWS ECR Push ----
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1  

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push to AWS ECR
        run: |
          ECR_REPO_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/$IMAGE_NAME
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REPO_URI:$IMAGE_TAG
          docker push $ECR_REPO_URI:$IMAGE_TAG
